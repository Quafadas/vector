/*
 * Copyright 2023 dragonfly.ai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import slash.stats.probability.distributions.{EstimatedLogNormal, LogNormal, stream}
import slash.vector.*

class TestLogNormal extends munit.FunSuite {

  test("LogNormal.p(x)") {

    // test values computed by: https://www.mathworks.com/help/stats/lognpdf.html
    /*
     * x = 0:0.25:5
     * y = lognpdf(x, 1, 1)
     * fprintf('%9.11g,\n', y)
     */
    val lgnrm = LogNormal(1.0, 1.0)
    assertEqualsDouble(lgnrm.p(0), 0, 0.000000001)
    assertEqualsDouble(lgnrm.p(0.25), 0.092564964594, 0.000000001)
    assertEqualsDouble(lgnrm.p(0.5), 0.19029780481, 0.000000001)
    assertEqualsDouble(lgnrm.p(0.75), 0.23216219839, 0.000000001)
    assertEqualsDouble(lgnrm.p(1), 0.24197072452, 0.000000001)
    assertEqualsDouble(lgnrm.p(1.25), 0.23602086769, 0.000000001)
    assertEqualsDouble(lgnrm.p(1.5), 0.22287604588, 0.000000001)
    assertEqualsDouble(lgnrm.p(1.75), 0.20689922329, 0.000000001)
    assertEqualsDouble(lgnrm.p(2), 0.19029780481, 0.000000001)
    assertEqualsDouble(lgnrm.p(2.25), 0.17416669154, 0.000000001)
    assertEqualsDouble(lgnrm.p(2.5), 0.15901879346, 0.000000001)
    assertEqualsDouble(lgnrm.p(2.75), 0.14506015864, 0.000000001)
    assertEqualsDouble(lgnrm.p(3), 0.13233575153, 0.000000001)
    assertEqualsDouble(lgnrm.p(3.25), 0.12080805281, 0.000000001)
    assertEqualsDouble(lgnrm.p(3.5), 0.11039989891, 0.000000001)
    assertEqualsDouble(lgnrm.p(3.75), 0.10101787643, 0.000000001)
    assertEqualsDouble(lgnrm.p(4), 0.092564964594, 0.000000001)
    assertEqualsDouble(lgnrm.p(4.25), 0.084947164932, 0.000000001)
    assertEqualsDouble(lgnrm.p(4.5), 0.078076751621, 0.000000001)
    assertEqualsDouble(lgnrm.p(4.75), 0.071873628731, 0.000000001)
    assertEqualsDouble(lgnrm.p(5), 0.066265642406, 0.000000001)

  }

  test("estimated LogNormal ") {

    // generated by: LogNormal(1.0, 1.0)
    val observations:Vec[99] = Vec[99](0.5943340226306387, 0.15122105057128385, 1.7619326991239699, 0.6235055266142246, 0.3554449040237166, 0.5990186520288631, 0.6861442167928717, 4.565514005210324, 1.0091499190392876, 0.1659868330456365, 0.8967416910042507, 0.9593256524348103, 0.8673107054729234, 5.035578338326729, 2.275437309903328, 5.409933571507067, 0.4793712197364723, 0.22058482832171245, 0.36884166301341126, 0.6581288322563629, 2.5954793517049044, 0.14312946825697886, 2.161773595128266, 0.6709946311405732, 1.249119980762208, 0.19998667190824698, 0.38733126236592735, 3.2600337229159684, 2.4499526019644353, 0.1588301159658832, 0.30323509732168646, 0.3177744694724581, 2.3201953209995994, 0.3200717704289598, 1.3606076053842056, 1.4510877034643637, 1.6116149507952309, 0.5517008633053656, 0.09067286037928118, 0.44134162005866573, 3.6058894198846283, 0.7710115300252482, 0.24761496786989814, 0.2589750018238802, 0.3412577354200335, 0.6734239927199709, 0.5877569575924841, 0.4767573760852023, 0.22128409569912968, 0.5227611841969152, 0.7185872392540134, 3.3265390568336604, 1.2271177182683892, 0.8562926940580615, 1.5994481439321595, 0.699122477519905, 0.6495394365564153, 0.7354297991011937, 0.8630754553001329, 0.9633933980935574, 0.7708005570813975, 0.9655768691007771, 2.047515884049886, 0.28714655444436066, 0.19751393746271534, 0.15217662102018262, 1.3832308136018456, 1.4351873495975835, 0.4205457571824337, 0.9948792120651562, 0.260344842736464, 1.1059777672752147, 1.5781678094121532, 2.468830556359966, 1.2032463324718665, 0.1477934071152146, 1.7399923992287911, 1.208566534023198, 1.0930169975724902, 0.6274007310779873, 0.32291848415397956, 0.4164894379959192, 0.9141609684735802, 2.1787597290430596, 1.7983597661198567, 0.9066634436951284, 3.1139756941972845, 1.2867583146121013, 0.652701686438592, 1.143260730068083, 0.20331758614722717, 1.1848373970754107, 2.683287521779504, 3.2793441044500495, 0.5071950911705455, 0.2505632209944193, 0.11991144395813343, 1.5027358246684905, 0.5711659088654777)

    val sLN: stream.LogNormal = stream.LogNormal()
    var i: Int = 0; while (i < observations.dimension) {
      sLN.observe(observations(i))
      i += 1
    }

    val eLN:EstimatedLogNormal = sLN.estimate

    assertEqualsDouble(eLN.μ, 1.17009318473742, 0.000000001)
    assertEqualsDouble(eLN.σ, 1.38820388232077, 0.000000001)

  }
}
